# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: span.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='span.proto',
  package='',
  syntax='proto3',
  serialized_options=_b('\n\030com.expedia.open.tracingP\001Z\010haystack'),
  serialized_pb=_b('\n\nspan.proto\"\xb6\x01\n\x04Span\x12\x0f\n\x07traceId\x18\x01 \x01(\t\x12\x0e\n\x06spanId\x18\x02 \x01(\t\x12\x14\n\x0cparentSpanId\x18\x03 \x01(\t\x12\x13\n\x0bserviceName\x18\x04 \x01(\t\x12\x15\n\roperationName\x18\x05 \x01(\t\x12\x11\n\tstartTime\x18\x06 \x01(\x03\x12\x10\n\x08\x64uration\x18\x07 \x01(\x03\x12\x12\n\x04logs\x18\x08 \x03(\x0b\x32\x04.Log\x12\x12\n\x04tags\x18\t \x03(\x0b\x32\x04.Tag\".\n\x03Log\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\x12\x14\n\x06\x66ields\x18\x02 \x03(\x0b\x32\x04.Tag\"\xd3\x01\n\x03Tag\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1a\n\x04type\x18\x02 \x01(\x0e\x32\x0c.Tag.TagType\x12\x0e\n\x04vStr\x18\x03 \x01(\tH\x00\x12\x0f\n\x05vLong\x18\x04 \x01(\x03H\x00\x12\x11\n\x07vDouble\x18\x05 \x01(\x01H\x00\x12\x0f\n\x05vBool\x18\x06 \x01(\x08H\x00\x12\x10\n\x06vBytes\x18\x07 \x01(\x0cH\x00\"A\n\x07TagType\x12\n\n\x06STRING\x10\x00\x12\n\n\x06\x44OUBLE\x10\x01\x12\x08\n\x04\x42OOL\x10\x02\x12\x08\n\x04LONG\x10\x03\x12\n\n\x06\x42INARY\x10\x04\x42\t\n\x07myvalue\"\x1d\n\x05\x42\x61tch\x12\x14\n\x05spans\x18\x01 \x03(\x0b\x32\x05.SpanB&\n\x18\x63om.expedia.open.tracingP\x01Z\x08haystackb\x06proto3')
)



_TAG_TAGTYPE = _descriptor.EnumDescriptor(
  name='TagType',
  full_name='Tag.TagType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STRING', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOUBLE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOL', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LONG', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BINARY', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=383,
  serialized_end=448,
)
_sym_db.RegisterEnumDescriptor(_TAG_TAGTYPE)


_SPAN = _descriptor.Descriptor(
  name='Span',
  full_name='Span',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='traceId', full_name='Span.traceId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='spanId', full_name='Span.spanId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parentSpanId', full_name='Span.parentSpanId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='serviceName', full_name='Span.serviceName', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='operationName', full_name='Span.operationName', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='startTime', full_name='Span.startTime', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration', full_name='Span.duration', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='logs', full_name='Span.logs', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tags', full_name='Span.tags', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15,
  serialized_end=197,
)


_LOG = _descriptor.Descriptor(
  name='Log',
  full_name='Log',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='Log.timestamp', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fields', full_name='Log.fields', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=199,
  serialized_end=245,
)


_TAG = _descriptor.Descriptor(
  name='Tag',
  full_name='Tag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='Tag.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='Tag.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vStr', full_name='Tag.vStr', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vLong', full_name='Tag.vLong', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vDouble', full_name='Tag.vDouble', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vBool', full_name='Tag.vBool', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vBytes', full_name='Tag.vBytes', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TAG_TAGTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='myvalue', full_name='Tag.myvalue',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=248,
  serialized_end=459,
)


_BATCH = _descriptor.Descriptor(
  name='Batch',
  full_name='Batch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='spans', full_name='Batch.spans', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=461,
  serialized_end=490,
)

_SPAN.fields_by_name['logs'].message_type = _LOG
_SPAN.fields_by_name['tags'].message_type = _TAG
_LOG.fields_by_name['fields'].message_type = _TAG
_TAG.fields_by_name['type'].enum_type = _TAG_TAGTYPE
_TAG_TAGTYPE.containing_type = _TAG
_TAG.oneofs_by_name['myvalue'].fields.append(
  _TAG.fields_by_name['vStr'])
_TAG.fields_by_name['vStr'].containing_oneof = _TAG.oneofs_by_name['myvalue']
_TAG.oneofs_by_name['myvalue'].fields.append(
  _TAG.fields_by_name['vLong'])
_TAG.fields_by_name['vLong'].containing_oneof = _TAG.oneofs_by_name['myvalue']
_TAG.oneofs_by_name['myvalue'].fields.append(
  _TAG.fields_by_name['vDouble'])
_TAG.fields_by_name['vDouble'].containing_oneof = _TAG.oneofs_by_name['myvalue']
_TAG.oneofs_by_name['myvalue'].fields.append(
  _TAG.fields_by_name['vBool'])
_TAG.fields_by_name['vBool'].containing_oneof = _TAG.oneofs_by_name['myvalue']
_TAG.oneofs_by_name['myvalue'].fields.append(
  _TAG.fields_by_name['vBytes'])
_TAG.fields_by_name['vBytes'].containing_oneof = _TAG.oneofs_by_name['myvalue']
_BATCH.fields_by_name['spans'].message_type = _SPAN
DESCRIPTOR.message_types_by_name['Span'] = _SPAN
DESCRIPTOR.message_types_by_name['Log'] = _LOG
DESCRIPTOR.message_types_by_name['Tag'] = _TAG
DESCRIPTOR.message_types_by_name['Batch'] = _BATCH
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Span = _reflection.GeneratedProtocolMessageType('Span', (_message.Message,), dict(
  DESCRIPTOR = _SPAN,
  __module__ = 'span_pb2'
  # @@protoc_insertion_point(class_scope:Span)
  ))
_sym_db.RegisterMessage(Span)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), dict(
  DESCRIPTOR = _LOG,
  __module__ = 'span_pb2'
  # @@protoc_insertion_point(class_scope:Log)
  ))
_sym_db.RegisterMessage(Log)

Tag = _reflection.GeneratedProtocolMessageType('Tag', (_message.Message,), dict(
  DESCRIPTOR = _TAG,
  __module__ = 'span_pb2'
  # @@protoc_insertion_point(class_scope:Tag)
  ))
_sym_db.RegisterMessage(Tag)

Batch = _reflection.GeneratedProtocolMessageType('Batch', (_message.Message,), dict(
  DESCRIPTOR = _BATCH,
  __module__ = 'span_pb2'
  # @@protoc_insertion_point(class_scope:Batch)
  ))
_sym_db.RegisterMessage(Batch)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
